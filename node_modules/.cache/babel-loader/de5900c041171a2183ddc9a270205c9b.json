{"ast":null,"code":"var _jsxFileName = \"/Users/johnyoo/Desktop/OtterSpace/src/components/DashboardSection.js\";\nimport React from \"react\";\nimport Section from \"./Section\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SectionHeader2 from \"./SectionHeader2\";\nimport HomeSelector from \"./HomeSelector\";\nimport Toast from \"react-bootstrap/Toast\";\nimport Media from \"react-bootstrap/Media\";\nimport Avatar from \"./Avatar\";\nimport \"./DashboardSection.scss\";\nimport firebase from \"./../util/firebase\";\nimport SidebarSection from \"./SidebarSection\";\nimport ChatSection from \"./ChatSection\"; // Firebase variables\n\nvar db = firebase.firestore();\nvar postsRef = db.collection(\"posts\").orderBy('datePosted'); // Post Data\n\nvar userName = \"\";\nvar userImage = \"\";\nvar userClass = \"\";\nvar userSchool = \"\";\nvar userLinkedin = \"\";\nvar userWebsite = \"\";\nvar postTitle = \"\";\nvar postDescription = \"\";\nvar postIndustry = \"\";\nvar chatId = \"\";\nvar userId = \"\";\nvar dateFormatted = \"\";\nvar tempImage = \"\";\nvar tempName = \"\";\nvar tempYear = \"\";\nvar tempSchool = \"\";\nvar currentChatId = \"\";\nvar currentMessage = \"\";\n\nclass DashboardSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showCreate = () => {\n      this.setState({\n        createPost: true\n      });\n    };\n\n    this.hideCreate = () => {\n      this.setState({\n        createPost: false\n      });\n    };\n\n    this.hideCard = () => {\n      this.setState({\n        isHidden: true\n      });\n    };\n\n    this.showChat = (chatId, userId) => {\n      this.getChat(chatId, userId);\n      console.log(userId);\n      this.setState({\n        showChat: true,\n        postUserId: userId\n      });\n    };\n\n    this.hideChat = () => {\n      this.setState({\n        showChat: false\n      });\n    };\n\n    this.formatDate = () => {\n      let datePosted = new Date();\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      dateFormatted = months[datePosted.getMonth()] + \" \" + datePosted.getDate() + \", \" + datePosted.getFullYear() + \", \" + this.formatAMPM(datePosted);\n      console.log(dateFormatted);\n    };\n\n    this.formatAMPM = date => {\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var ampm = hours >= 12 ? 'pm' : 'am';\n      hours = hours % 12;\n      hours = hours ? hours : 12; // the hour '0' should be '12'\n\n      minutes = minutes < 10 ? '0' + minutes : minutes;\n      var strTime = hours + ':' + minutes + ampm;\n      return strTime;\n    };\n\n    this.sendMessage = () => {\n      db.collection(\"messages\").add({\n        chatId: currentChatId,\n        timeStamp: new Date(),\n        message: currentMessage,\n        userId: userId,\n        image: userImage\n      }).then(function (docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n      this.getMessages();\n    };\n\n    this.changeTitleHandler = event => {\n      postTitle = event.target.value;\n    };\n\n    this.changeDescriptionHandler = event => {\n      postDescription = event.target.value;\n    };\n\n    this.changeIndustryHandler = event => {\n      postIndustry = event.target.value;\n    };\n\n    this.changeOrderFilter = event => {\n      this.setState({\n        orderFilter: event.target.value\n      });\n    };\n\n    this.onMessageChange = event => {\n      currentMessage = event.target.value;\n    };\n\n    this.state = {\n      isHidden: false,\n      createPost: false,\n      showChat: false,\n      posts: [],\n      user: firebase.auth().currentUser,\n      orderFilter: \"Newest to oldest\",\n      chatImage: \"\",\n      chatName: \"\",\n      chatYear: \"\",\n      chatSchool: \"\",\n      messages: [],\n      postUserId: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // firebase methods\n    this.formatDate();\n    await postsRef.get().then(querySnapshot => {\n      let posts = [];\n      querySnapshot.forEach(doc => {\n        posts.push(doc.data()); //   console.log(doc.data().datePosted.toDate().getFullYear());\n        //   console.log(doc.data().datePosted.toDate().getMonth());\n        //   console.log(doc.data().datePosted.toDate().getDate());\n      });\n\n      if (this.state.orderFilter === \"Newest to oldest\") {\n        posts = posts.reverse();\n      }\n\n      this.setState({\n        posts: posts\n      });\n    });\n    var userRef = db.collection(\"users\").doc(this.state.user.uid);\n    userId = this.state.user.uid;\n    await userRef.get().then(function (doc) {\n      if (doc.exists) {\n        userClass = doc.data().year;\n        userSchool = doc.data().school;\n        userName = doc.data().name;\n        userImage = doc.data().image;\n        userLinkedin = doc.data().linkedin;\n        userWebsite = doc.data().linkedin;\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    if (postTitle === \"\" || postDescription === \"\" || postIndustry === \"\") {\n      alert('Missing fields!');\n    } else {\n      await db.collection(\"chats\").add({\n        parameter: \"Test\"\n      }).then(function (docRef) {\n        chatId = docRef.id;\n        console.log(\"Document written with ID: \", docRef.id);\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n      await db.collection(\"posts\").add({\n        body: postDescription,\n        class: userClass,\n        image: userImage,\n        name: userName,\n        tag: postIndustry,\n        title: postTitle,\n        university: userSchool,\n        datePosted: new Date(),\n        chatId: chatId,\n        userId: userId,\n        dateFormatted: dateFormatted,\n        linkedin: userLinkedin\n      }).then(function (docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n        window.location.reload(false);\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n    }\n  }\n\n  async getChat(chatId, userId) {\n    var userRef = db.collection(\"users\").doc(userId);\n    currentChatId = chatId;\n    await userRef.get().then(function (doc) {\n      if (doc.exists) {\n        tempImage = doc.data().image;\n        tempName = doc.data().name;\n        tempYear = doc.data().year;\n        tempSchool = doc.data().school;\n      } else {\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n    this.setState({\n      chatImage: tempImage,\n      chatName: tempName,\n      chatYear: tempYear,\n      chatSchool: tempSchool\n    });\n    this.getMessages();\n  }\n\n  async getMessages() {\n    this.setState({\n      messages: []\n    });\n    var messagesRef = db.collection(\"messages\").where(\"chatId\", \"==\", currentChatId).orderBy(\"timeStamp\");\n    let messages = [];\n    await messagesRef.get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        messages.push(doc.data());\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    this.setState({\n      messages: messages\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Section, {\n      bg: this.props.bg,\n      textColor: this.props.textColor,\n      size: this.props.size,\n      bgImage: this.props.bgImage,\n      bgImageOpacity: this.props.bgImageOpacity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      sticky: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 3,\n      md: 2,\n      className: \"d-none d-sm-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SidebarSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"w-100 bg-purple mb-3\",\n      hidden: this.state.isHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"DashboardSection__create-workspace-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 41\n      }\n    }, \"Work with other students on projects\")), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"DashboardSection__create-workspace-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, \"Find projects to work on with other students - filtered by industry and interests\")), /*#__PURE__*/React.createElement(LinkContainer, {\n      to: \"/workspace/kanban\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      size: \"md\",\n      className: \"px-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"DashboardSection__done-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 45\n      }\n    }, \"Next\"))), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(LinkContainer, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Link, {\n      onClick: this.hideCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"DashboardSection__skip-for-now\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 49\n      }\n    }, \"Skip for now\")))))), /*#__PURE__*/React.createElement(SectionHeader2, {\n      title: this.props.title,\n      subtitle: this.props.subtitle,\n      size: 1,\n      spaced: true,\n      className: \"text-left\",\n      onClick: this.showCreate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.createPost,\n      onHide: this.hideCreate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 10,\n      className: \"ml-4 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"post_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"I am looking for...\",\n      onChange: this.changeTitleHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 10,\n      className: \"ml-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"post_description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Type a description...\",\n      as: \"textarea\",\n      rows: 4,\n      onChange: this.changeDescriptionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 10,\n      className: \"ml-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"post_industry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: \"Select an industry\",\n      onChange: this.changeIndustryHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 53\n      }\n    }, \"Select an industry\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 53\n      }\n    }, \"Web Dev\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 53\n      }\n    }, \"Design\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 53\n      }\n    }, \"Product Management\"))))), /*#__PURE__*/React.createElement(Form.Row, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"purple\",\n      size: \"md\",\n      className: \"px-4 mr-4\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"DashboardSection__post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 49\n      }\n    }, \"Post\")))))), /*#__PURE__*/React.createElement(HomeSelector, {\n      items: this.state.posts,\n      changeOrderFilter: this.changeOrderFilter,\n      showChat: this.showChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mx-auto text-center\",\n      style: {\n        maxWidth: \"460px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-none d-sm-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Toast, {\n      show: this.state.showChat,\n      onClose: this.hideChat,\n      className: \"position-fixed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      className: \"align-items-center mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: this.state.chatImage,\n      size: \"48px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Media.Body, {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"DashboardSection__no-classname mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 45\n      }\n    }, this.state.chatName), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"DashboardSection__no-classname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 45\n      }\n    }, this.state.chatSchool, \" | \", this.state.chatYear)))), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ChatSection, {\n      items: this.state.messages,\n      postUserId: this.state.postUserId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"send_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Type a message\",\n      onChange: this.onMessageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"purple\",\n      onClick: this.sendMessage,\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 57\n      }\n    }, \"Send\"))))))))))));\n  }\n\n}\n\nexport default DashboardSection;","map":{"version":3,"sources":["/Users/johnyoo/Desktop/OtterSpace/src/components/DashboardSection.js"],"names":["React","Section","Container","Row","Col","Card","Button","Modal","Form","LinkContainer","SectionHeader2","HomeSelector","Toast","Media","Avatar","firebase","SidebarSection","ChatSection","db","firestore","postsRef","collection","orderBy","userName","userImage","userClass","userSchool","userLinkedin","userWebsite","postTitle","postDescription","postIndustry","chatId","userId","dateFormatted","tempImage","tempName","tempYear","tempSchool","currentChatId","currentMessage","DashboardSection","Component","constructor","props","showCreate","setState","createPost","hideCreate","hideCard","isHidden","showChat","getChat","console","log","postUserId","hideChat","formatDate","datePosted","Date","months","getMonth","getDate","getFullYear","formatAMPM","date","hours","getHours","minutes","getMinutes","ampm","strTime","sendMessage","add","timeStamp","message","image","then","docRef","id","catch","error","getMessages","changeTitleHandler","event","target","value","changeDescriptionHandler","changeIndustryHandler","changeOrderFilter","orderFilter","onMessageChange","state","posts","user","auth","currentUser","chatImage","chatName","chatYear","chatSchool","messages","componentDidMount","get","querySnapshot","forEach","doc","push","data","reverse","userRef","uid","exists","year","school","name","linkedin","handleSubmit","preventDefault","alert","parameter","body","class","tag","title","university","window","location","reload","messagesRef","where","render","bg","textColor","size","bgImage","bgImageOpacity","subtitle","maxWidth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Section from \"./Section\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SectionHeader2 from \"./SectionHeader2\";\nimport HomeSelector from \"./HomeSelector\";\nimport Toast from \"react-bootstrap/Toast\";\nimport Media from \"react-bootstrap/Media\";\nimport Avatar from \"./Avatar\";\nimport \"./DashboardSection.scss\";\nimport firebase from \"./../util/firebase\";\nimport SidebarSection from \"./SidebarSection\";\nimport ChatSection from \"./ChatSection\";\n\n\n// Firebase variables\nvar db = firebase.firestore();\nvar postsRef = db.collection(\"posts\").orderBy('datePosted');\n\n// Post Data\nvar userName = \"\";\nvar userImage = \"\";\nvar userClass = \"\";\nvar userSchool = \"\";\nvar userLinkedin = \"\";\nvar userWebsite = \"\";\n\nvar postTitle = \"\";\nvar postDescription = \"\";\nvar postIndustry = \"\";\nvar chatId = \"\";\nvar userId = \"\";\nvar dateFormatted = \"\";\n\nvar tempImage = \"\";\nvar tempName = \"\";\nvar tempYear = \"\";\nvar tempSchool = \"\";\n\nvar currentChatId = \"\";\nvar currentMessage = \"\";\n\nclass DashboardSection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isHidden: false,\n            createPost: false,\n            showChat: false,\n            posts: [],\n            user: firebase.auth().currentUser,\n            orderFilter: \"Newest to oldest\",\n            chatImage: \"\",\n            chatName: \"\",\n            chatYear: \"\",\n            chatSchool: \"\",\n            messages: [],\n            postUserId: \"\",\n        };\n    };\n\n    async componentDidMount() {\n        // firebase methods\n        this.formatDate();\n        await postsRef.get().then((querySnapshot) => {\n            let posts = [];\n            querySnapshot.forEach((doc) => {\n              posts.push(doc.data());\n            //   console.log(doc.data().datePosted.toDate().getFullYear());\n            //   console.log(doc.data().datePosted.toDate().getMonth());\n            //   console.log(doc.data().datePosted.toDate().getDate());\n            });\n            if(this.state.orderFilter === \"Newest to oldest\") {\n                posts = posts.reverse();\n            }\n            this.setState({posts: posts});\n        });\n        var userRef = db.collection(\"users\").doc(this.state.user.uid);\n        userId = this.state.user.uid;\n        await userRef.get().then(function(doc) {\n            if (doc.exists) {\n                userClass = doc.data().year;\n                userSchool = doc.data().school;\n                userName = doc.data().name;\n                userImage = doc.data().image;\n                userLinkedin = doc.data().linkedin;\n                userWebsite = doc.data().linkedin;\n            } else {\n                console.log(\"No such document!\");\n            }\n          }).catch(function(error) {\n            console.log(\"Error getting document:\", error);\n          });\n    }\n\n    showCreate = () => {\n        this.setState({\n            createPost: true,\n        });\n    };\n\n    hideCreate = () => {\n        this.setState({\n            createPost: false,\n        });\n    };\n\n    hideCard = () => {\n        this.setState({\n            isHidden: true,\n        });\n    };\n\n    showChat = (chatId, userId) => {\n        this.getChat(chatId, userId);\n        console.log(userId);\n        this.setState({\n            showChat: true,\n            postUserId: userId\n        });\n    };\n\n    hideChat = () => {\n        this.setState({\n            showChat: false,\n        });\n    };\n\n    formatDate = () => {\n        let datePosted = new Date();\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        dateFormatted = months[datePosted.getMonth()] + \" \" + datePosted.getDate() + \", \" + datePosted.getFullYear() + \", \" + this.formatAMPM(datePosted);\n        console.log(dateFormatted);\n    }\n\n    formatAMPM = (date) => {\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0'+minutes : minutes;\n        var strTime = hours + ':' + minutes + ampm;\n        return strTime;\n      }\n      \n    async handleSubmit(event) {\n        event.preventDefault();\n        if (postTitle === \"\" || postDescription === \"\" || postIndustry === \"\") {\n            alert('Missing fields!');\n        }\n        else {\n            await db.collection(\"chats\").add({\n                parameter: \"Test\"\n            }).then(function (docRef) {\n                chatId = docRef.id;\n                console.log(\"Document written with ID: \", docRef.id);\n            })\n            .catch(function (error) {\n                console.error(\"Error adding document: \", error);\n            });\n            await db.collection(\"posts\").add({\n                body: postDescription,\n                class: userClass,\n                image: userImage,\n                name: userName,\n                tag: postIndustry,\n                title: postTitle,\n                university: userSchool,\n                datePosted: new Date(),\n                chatId: chatId,\n                userId: userId,\n                dateFormatted: dateFormatted,\n                linkedin: userLinkedin,\n            })\n                .then(function (docRef) {\n                    console.log(\"Document written with ID: \", docRef.id);\n                    window.location.reload(false);\n                })\n                .catch(function (error) {\n                    console.error(\"Error adding document: \", error);\n                });\n        }\n    };\n\n     sendMessage = () => {\n        db.collection(\"messages\").add({\n            chatId: currentChatId,\n            timeStamp: new Date(),\n            message: currentMessage,\n            userId: userId,\n            image: userImage\n        }).then(function (docRef) {\n            console.log(\"Document written with ID: \", docRef.id);\n        })\n        .catch(function (error) {\n            console.error(\"Error adding document: \", error);\n        });\n\n        this.getMessages();\n    };\n\n    changeTitleHandler = (event) => {\n        postTitle = event.target.value;\n    }\n\n    changeDescriptionHandler = (event) => {\n        postDescription = event.target.value;\n    }\n\n    changeIndustryHandler = (event) => {\n        postIndustry = event.target.value;\n    }\n\n    changeOrderFilter = (event) => {\n        this.setState({\n            orderFilter: event.target.value\n        });\n    }\n\n    onMessageChange = (event) => {\n        currentMessage = event.target.value;\n    }\n\n    async getChat(chatId, userId) {\n        var userRef = db.collection(\"users\").doc(userId);\n        currentChatId = chatId;\n        await userRef.get().then(function(doc) {\n            if (doc.exists) {\n                tempImage = doc.data().image;\n                tempName = doc.data().name;\n                tempYear = doc.data().year;\n                tempSchool = doc.data().school;\n            } else {\n                console.log(\"No such document!\");\n            }\n          }).catch(function(error) {\n            console.log(\"Error getting document:\", error);\n          });\n\n          this.setState({\n            chatImage: tempImage,\n            chatName: tempName,\n            chatYear: tempYear,\n            chatSchool: tempSchool,\n        });\n        this.getMessages();\n    }\n\n    async getMessages() {\n        this.setState({messages: []});\n        var messagesRef = db.collection(\"messages\").where(\"chatId\", \"==\", currentChatId).orderBy(\"timeStamp\");\n        let messages = [];\n        await messagesRef.get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                messages.push(doc.data());\n            });\n\n        })\n        .catch(function(error) {\n            console.log(\"Error getting documents: \", error);\n        });\n        this.setState({messages: messages});\n    }\n    \n    render() {\n        return (\n            <Section\n                bg={this.props.bg}\n                textColor={this.props.textColor}\n                size={this.props.size}\n                bgImage={this.props.bgImage}\n                bgImageOpacity={this.props.bgImageOpacity}\n            >\n                <Container fluid={true} sticky=\"top\">\n                    <Row>\n                        <Col xs={3} md={2} className=\"d-none d-sm-block\">\n                            <SidebarSection></SidebarSection>\n                        </Col>\n                        <Col xs={6} md={7}>\n                            <Card className=\"w-100 bg-purple mb-3\" hidden={this.state.isHidden}>\n                                <Card.Body className=\"text-center\">\n                                    <Card.Title>\n                                        <h4 className=\"DashboardSection__create-workspace-title\">\n                                            Work with other students on projects\n                  </h4>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <p className=\"DashboardSection__create-workspace-text\">\n                                            Find projects to work on with other students - filtered by\n                                            industry and interests\n                  </p>\n                                    </Card.Text>\n                                    <LinkContainer to=\"/workspace/kanban\">\n                                        <Button variant=\"light\" size=\"md\" className=\"px-4\">\n                                            <span className=\"DashboardSection__done-button\">Next</span>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Col xs={12} className=\"mt-2\">\n                                        <LinkContainer to=\"#\">\n                                            <Card.Link onClick={this.hideCard}>\n                                                <span className=\"DashboardSection__skip-for-now\">\n                                                    Skip for now\n                      </span>\n                                            </Card.Link>\n                                        </LinkContainer>\n                                    </Col>\n                                </Card.Body>\n                            </Card>\n                            <SectionHeader2\n                                title={this.props.title}\n                                subtitle={this.props.subtitle}\n                                size={1}\n                                spaced={true}\n                                className=\"text-left\"\n                                onClick={this.showCreate}\n                            ></SectionHeader2>\n                            <Modal show={this.state.createPost} onHide={this.hideCreate}>\n                                <Form onSubmit={this.handleSubmit}>\n                                    <Form.Row>\n                                        <Col xs={10} className=\"ml-4 mt-3\">\n                                            <Form.Group controlId=\"post_title\">\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"I am looking for...\"\n                                                    onChange={this.changeTitleHandler}\n                                                ></Form.Control>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col xs={10} className=\"ml-4\">\n                                            <Form.Group controlId=\"post_description\">\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"Type a description...\"\n                                                    as=\"textarea\"\n                                                    rows={4}\n                                                    onChange={this.changeDescriptionHandler}\n                                                ></Form.Control>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col xs={10} className=\"ml-4\">\n                                            <Form.Group controlId=\"post_industry\">\n                                                <Form.Control\n                                                    as=\"select\"\n                                                    defaultValue=\"Select an industry\"\n                                                    onChange={this.changeIndustryHandler}\n                                                >\n                                                    <option>Select an industry</option>\n                                                    <option>Web Dev</option>\n                                                    <option>Design</option>\n                                                    <option>Product Management</option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                        </Col>\n                                    </Form.Row>\n                                    <Form.Row className=\"mb-3\">\n                                        <Col xs={12} className=\"text-right\">\n                                            <Button\n                                                variant=\"purple\"\n                                                size=\"md\"\n                                                className=\"px-4 mr-4\"\n                                                type=\"submit\"\n                                            >\n                                                <span className=\"DashboardSection__post\">Post</span>\n                                            </Button>\n                                        </Col>\n                                    </Form.Row>\n                                </Form>\n                            </Modal>\n                            <HomeSelector\n                                items={this.state.posts}\n                                changeOrderFilter={this.changeOrderFilter}\n                                showChat={this.showChat}\n                            ></HomeSelector>\n                            <div\n                                className=\"mt-5 mx-auto text-center\"\n                                style={{\n                                    maxWidth: \"460px\",\n                                }}\n                            >\n                            </div>\n                        </Col>\n                        <Col className=\"d-none d-sm-block\">\n                            <Toast\n                                show={this.state.showChat}\n                                onClose={this.hideChat}\n                                className=\"position-fixed\"\n                            >\n                                <Toast.Header>\n                                    <Media className=\"align-items-center mb-2\">\n                                        <Avatar\n                                            src={this.state.chatImage}\n                                            size=\"48px\"\n                                        />\n                                        <Media.Body className=\"ml-2\">\n                                            <h6 className=\"DashboardSection__no-classname mb-0\">\n                                                {this.state.chatName}\n                    </h6>\n                                            <small className=\"DashboardSection__no-classname\">\n                                                {this.state.chatSchool} | {this.state.chatYear}\n                    </small>\n                                        </Media.Body>\n                                    </Media>\n                                </Toast.Header>\n                                <Toast.Body>\n                                    <Row>\n                                        <ChatSection items={this.state.messages} postUserId={this.state.postUserId}>\n\n                                        </ChatSection>\n                                        <Col xs={12} className=\"mt-4\">\n                                            <Form>\n                                                <Form.Row>\n                                                    <Col xs=\"8\">\n                                                        <Form.Group controlId=\"send_text\">\n                                                            <Form.Control\n                                                                type=\"text\"\n                                                                placeholder=\"Type a message\"\n                                                                onChange={this.onMessageChange}\n                                                            />\n                                                        </Form.Group>\n                                                    </Col>\n                                                    <Col>\n                                                        <Button variant=\"purple\" onClick={this.sendMessage} size=\"md\">\n                                                            Send\n                                                        </Button>\n                                                    </Col>\n                                                </Form.Row>\n                                            </Form>\n                                        </Col>\n                                    </Row>\n                                </Toast.Body>\n                            </Toast>\n                        </Col>\n                    </Row>\n                </Container>\n            </Section>\n        );\n    }\n}\n\nexport default DashboardSection;\n"]},"metadata":{},"sourceType":"module"}