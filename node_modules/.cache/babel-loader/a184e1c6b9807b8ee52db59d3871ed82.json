{"ast":null,"code":"import _slicedToArray from\"/Users/johnyoo/Desktop/OtterSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import FormAlert from\"./FormAlert\";import Form from\"react-bootstrap/Form\";import Col from\"react-bootstrap/Col\";import FormField from\"./FormField\";import Button from\"react-bootstrap/Button\";import Spinner from\"react-bootstrap/Spinner\";import contact from\"./../util/contact.js\";import{useForm}from\"react-hook-form\";function Contact(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pending=_useState2[0],setPending=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),formAlert=_useState4[0],setFormAlert=_useState4[1];var _useForm=useForm(),handleSubmit=_useForm.handleSubmit,register=_useForm.register,errors=_useForm.errors,reset=_useForm.reset;var onSubmit=function onSubmit(data){// Show pending indicator\nsetPending(true);contact.submit(data).then(function(){// Clear form\nreset();// Show success alert message\nsetFormAlert({type:\"success\",message:\"Your message has been sent!\"});}).catch(function(error){// Show error alert message\nsetFormAlert({type:\"error\",message:error.message});}).finally(function(){// Hide pending indicator\nsetPending(false);});};return/*#__PURE__*/React.createElement(React.Fragment,null,formAlert&&/*#__PURE__*/React.createElement(FormAlert,{type:formAlert.type,message:formAlert.message}),/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(Form.Row,null,props.showNameField&&/*#__PURE__*/React.createElement(Form.Group,{as:Col,xs:12,sm:6,controlId:\"formName\"},/*#__PURE__*/React.createElement(FormField,{size:props.inputSize,name:\"name\",type:\"text\",placeholder:\"Name\",error:errors.name,inputRef:register({required:\"Please enter your name\"})})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,xs:12,sm:props.showNameField?6:12,controlId:\"formEmail\"},/*#__PURE__*/React.createElement(FormField,{size:props.inputSize,name:\"email\",type:\"email\",placeholder:\"Email\",error:errors.email,inputRef:register({required:\"Please enter your email\"})}))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formMessage\"},/*#__PURE__*/React.createElement(FormField,{size:props.inputSize,name:\"message\",type:\"textarea\",placeholder:\"Message\",rows:5,error:errors.message,inputRef:register({required:\"Please enter a message\"})})),/*#__PURE__*/React.createElement(Button,{variant:\"purple\",size:props.inputSize,type:\"submit\",disabled:pending},/*#__PURE__*/React.createElement(\"span\",null,props.buttonText),pending&&/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",size:\"sm\",role:\"status\",\"aria-hidden\":true,className:\"ml-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Sending...\")))));}export default Contact;","map":{"version":3,"sources":["/Users/johnyoo/Desktop/OtterSpace/src/components/Contact.js"],"names":["React","useState","FormAlert","Form","Col","FormField","Button","Spinner","contact","useForm","Contact","props","pending","setPending","formAlert","setFormAlert","handleSubmit","register","errors","reset","onSubmit","data","submit","then","type","message","catch","error","finally","showNameField","inputSize","name","required","email","buttonText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormAlert from \"./FormAlert\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport contact from \"./../util/contact.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Contact(props) {\n  const [pending, setPending] = useState(false);\n  const [formAlert, setFormAlert] = useState(null);\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const onSubmit = (data) => {\n    // Show pending indicator\n    setPending(true);\n\n    contact\n      .submit(data)\n      .then(() => {\n        // Clear form\n        reset();\n        // Show success alert message\n        setFormAlert({\n          type: \"success\",\n          message: \"Your message has been sent!\",\n        });\n      })\n      .catch((error) => {\n        // Show error alert message\n        setFormAlert({\n          type: \"error\",\n          message: error.message,\n        });\n      })\n      .finally(() => {\n        // Hide pending indicator\n        setPending(false);\n      });\n  };\n\n  return (\n    <>\n      {formAlert && (\n        <FormAlert\n          type={formAlert.type}\n          message={formAlert.message}\n        ></FormAlert>\n      )}\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Row>\n          {props.showNameField && (\n            <Form.Group as={Col} xs={12} sm={6} controlId=\"formName\">\n              <FormField\n                size={props.inputSize}\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                error={errors.name}\n                inputRef={register({\n                  required: \"Please enter your name\",\n                })}\n              ></FormField>\n            </Form.Group>\n          )}\n\n          <Form.Group\n            as={Col}\n            xs={12}\n            sm={props.showNameField ? 6 : 12}\n            controlId=\"formEmail\"\n          >\n            <FormField\n              size={props.inputSize}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              error={errors.email}\n              inputRef={register({\n                required: \"Please enter your email\",\n              })}\n            ></FormField>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group controlId=\"formMessage\">\n          <FormField\n            size={props.inputSize}\n            name=\"message\"\n            type=\"textarea\"\n            placeholder=\"Message\"\n            rows={5}\n            error={errors.message}\n            inputRef={register({\n              required: \"Please enter a message\",\n            })}\n          ></FormField>\n        </Form.Group>\n        <Button\n          variant=\"purple\"\n          size={props.inputSize}\n          type=\"submit\"\n          disabled={pending}\n        >\n          <span>{props.buttonText}</span>\n\n          {pending && (\n            <Spinner\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden={true}\n              className=\"ml-2\"\n            >\n              <span className=\"sr-only\">Sending...</span>\n            </Spinner>\n          )}\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}