{"ast":null,"code":"import _slicedToArray from\"/Users/johnyoo/Desktop/OtterSpace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Form from\"react-bootstrap/Form\";import FormField from\"./FormField\";import Button from\"react-bootstrap/Button\";import Spinner from\"react-bootstrap/Spinner\";import{useAuth}from\"./../util/auth.js\";import{useForm}from\"react-hook-form\";function SettingsPassword(props){var auth=useAuth();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pending=_useState2[0],setPending=_useState2[1];var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors,reset=_useForm.reset,getValues=_useForm.getValues;var onSubmit=function onSubmit(data){// Show pending indicator\nsetPending(true);auth.updatePassword(data.pass).then(function(){// Clear form\nreset();// Set success status\nprops.onStatus({type:\"success\",message:\"Your password has been updated\"});}).catch(function(error){if(error.code===\"auth/requires-recent-login\"){// Update state to show re-authentication modal\nprops.onStatus({type:\"requires-recent-login\",// Resubmit after reauth flow\ncallback:function callback(){return onSubmit({pass:data.pass});}});}else{// Set error status\nprops.onStatus({type:\"error\",message:error.message});}}).finally(function(){// Hide pending indicator\nsetPending(false);});};return/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formName\"},/*#__PURE__*/React.createElement(FormField,{name:\"pass\",type:\"password\",label:\"New Password\",placeholder:\"Password\",error:errors.pass,inputRef:register({required:\"Please enter a password\"})})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formEmail\"},/*#__PURE__*/React.createElement(FormField,{name:\"confirmPass\",type:\"password\",label:\"Confirm New Password\",placeholder:\"Confirm Password\",error:errors.confirmPass,inputRef:register({required:\"Please enter your new password again\",validate:function validate(value){if(value===getValues().pass){return true;}else{return\"This doesn't match your password\";}}})})),/*#__PURE__*/React.createElement(Button,{variant:props.buttonColor,size:props.inputSize,type:\"submit\",disabled:pending},/*#__PURE__*/React.createElement(\"span\",null,\"Save\"),pending&&/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",size:\"sm\",role:\"status\",\"aria-hidden\":true,className:\"ml-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Sending...\"))));}export default SettingsPassword;","map":{"version":3,"sources":["/Users/johnyoo/Desktop/OtterSpace/src/components/SettingsPassword.js"],"names":["React","useState","Form","FormField","Button","Spinner","useAuth","useForm","SettingsPassword","props","auth","pending","setPending","register","handleSubmit","errors","reset","getValues","onSubmit","data","updatePassword","pass","then","onStatus","type","message","catch","error","code","callback","finally","required","confirmPass","validate","value","buttonColor","inputSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormField from \"./FormField\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useAuth } from \"./../util/auth.js\";\nimport { useForm } from \"react-hook-form\";\n\nfunction SettingsPassword(props) {\n  const auth = useAuth();\n  const [pending, setPending] = useState(false);\n\n  const { register, handleSubmit, errors, reset, getValues } = useForm();\n\n  const onSubmit = (data) => {\n    // Show pending indicator\n    setPending(true);\n\n    auth\n      .updatePassword(data.pass)\n      .then(() => {\n        // Clear form\n        reset();\n        // Set success status\n        props.onStatus({\n          type: \"success\",\n          message: \"Your password has been updated\",\n        });\n      })\n      .catch((error) => {\n        if (error.code === \"auth/requires-recent-login\") {\n          // Update state to show re-authentication modal\n          props.onStatus({\n            type: \"requires-recent-login\",\n            // Resubmit after reauth flow\n            callback: () => onSubmit({ pass: data.pass }),\n          });\n        } else {\n          // Set error status\n          props.onStatus({\n            type: \"error\",\n            message: error.message,\n          });\n        }\n      })\n      .finally(() => {\n        // Hide pending indicator\n        setPending(false);\n      });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Form.Group controlId=\"formName\">\n        <FormField\n          name=\"pass\"\n          type=\"password\"\n          label=\"New Password\"\n          placeholder=\"Password\"\n          error={errors.pass}\n          inputRef={register({\n            required: \"Please enter a password\",\n          })}\n        ></FormField>\n      </Form.Group>\n      <Form.Group controlId=\"formEmail\">\n        <FormField\n          name=\"confirmPass\"\n          type=\"password\"\n          label=\"Confirm New Password\"\n          placeholder=\"Confirm Password\"\n          error={errors.confirmPass}\n          inputRef={register({\n            required: \"Please enter your new password again\",\n            validate: (value) => {\n              if (value === getValues().pass) {\n                return true;\n              } else {\n                return \"This doesn't match your password\";\n              }\n            },\n          })}\n        ></FormField>\n      </Form.Group>\n      <Button\n        variant={props.buttonColor}\n        size={props.inputSize}\n        type=\"submit\"\n        disabled={pending}\n      >\n        <span>Save</span>\n\n        {pending && (\n          <Spinner\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden={true}\n            className=\"ml-2\"\n          >\n            <span className=\"sr-only\">Sending...</span>\n          </Spinner>\n        )}\n      </Button>\n    </Form>\n  );\n}\n\nexport default SettingsPassword;\n"]},"metadata":{},"sourceType":"module"}